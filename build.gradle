// Current gradle version 6.5.

plugins {
    id 'net.ltgt.errorprone' apply false version "4.2.0"
    id "com.gradleup.shadow" version "8.3.6"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'idea'
    apply plugin: "signing"

    apply plugin: 'net.ltgt.errorprone'
    apply plugin: 'com.gradleup.shadow'

    group = 'com.google.tsunami'
    version = '0.1.1-SNAPSHOT' // Current Tsunami version

    repositories {
        maven { // The google mirror is less flaky than mavenCentral()
            url 'https://maven-central.storage-download.googleapis.com/repos/central/data/'
        }

        mavenCentral()
        mavenLocal()
    }

    // Resolving conflicting NameResolverProvider from grpc-core.jar and
    // grpc-netty-shaded.jar, https://github.com/grpc/grpc-java/issues/10853
    shadowJar {
        zip64 true
        mergeServiceFiles()
    }

    if (rootProject.properties.get('errorProne', true)) {
        dependencies {
            errorprone "com.google.errorprone:error_prone_core:2.38.0"
            errorproneJavac 'com.google.errorprone:javac:9+181-r4173-1'
        }

        // Disable ErrorProne for all generated codes.
        tasks.withType(JavaCompile).configureEach {
            options.errorprone.disableWarningsInGeneratedCode = false
            options.errorprone.excludedPaths = '.*/build/generated/.*'
        }
    } else {
        // Disable Error Prone
        allprojects {
            afterEvaluate { project ->
                project.tasks.withType(JavaCompile) {
                    options.errorprone.enabled = false
                }
            }
        }
    }

    plugins.withId('java') {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21

        java.withJavadocJar()
        java.withSourcesJar()

        jar.manifest {
            attributes('Implementation-Title': name,
                    'Implementation-Version': version,
                    'Built-By': System.getProperty('user.name'),
                    'Built-JDK': System.getProperty('java.version'),
                    'Source-Compatibility': sourceCompatibility,
                    'Target-Compatibility': targetCompatibility)
        }

        // Log stacktrace to console when test fails.
        test {
            testLogging {
                exceptionFormat = 'full'
                showExceptions true
                showCauses true
                showStackTraces true
            }
            maxHeapSize = '1500m'
        }
    }

    plugins.withId('maven-publish') {
        publishing {
            publications {
                maven(MavenPublication) {
                    from components.java

                    pom {
                        name = project.group + ':' + project.name
                        url = 'https://github.com/google/tsunami-security-scanner'
                        afterEvaluate {
                            // description is not available until evaluated.
                            description = project.description
                        }

                        licenses {
                            license {
                                name = 'Apache 2.0'
                                url = 'https://opensource.org/licenses/Apache-2.0'
                            }
                        }

                        scm {
                            connection = 'scm:git:https://github.com/google/tsunami-security-scanner.git'
                            developerConnection = 'scm:git:git@github.com:google/tsunami-security-scanner.git'
                            url = 'https://github.com/google/tsunami-security-scanner'
                        }

                        developers {
                            developer {
                                id = 'com.google.tsunami'
                                name = 'Tsunami Contributors'
                                email = 'tsunami-security-scanner@googlegroups.com'
                                url = 'https://github.com/google/tsunami-security-scanner'
                                organization = 'Tsunami Authors'
                                organizationUrl = 'https://www.google.com'
                            }
                        }
                    }
                }
            }

            repositories {
                maven {
                    def stagingUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                    def releaseUrl = stagingUrl
                    def snapshotUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
                    url = version.endsWith('SNAPSHOT') ? snapshotUrl : releaseUrl
                    credentials {
                        if (rootProject.hasProperty('ossrhUsername')
                                && rootProject.hasProperty('ossrhPassword')) {
                            username = rootProject.ossrhUsername
                            password = rootProject.ossrhPassword
                        }
                    }
                }

                mavenLocal()
            }
        }

        signing {
            sign publishing.publications.maven
        }

        shadowJar {
            archiveClassifier = null
        }
    }
}
